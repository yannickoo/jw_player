<?php
/**
 * @file
 * Adds a theme function which allows theme developers to use the JW Player.
 */
use Drupal\jw_player\Entity\Jw_player;
use Symfony\Component\HttpFoundation\JsonResponse;


/**
 * Implements hook_theme().
 */
function jw_player_theme() {
  return array(
    'jw_player' => array(
      'variables' => array(
        'preset' => '',
        'file_url' => '',
        'file_mime' => '',
        'options' => array(),
        'html_id' => '',
      ),
      'file' => 'jw_player.field.inc',
      'template' => 'jw_player',
    ),
  );
}


/**
 * Returns the default settings for JW Player. Used in cases where a preset is
 * not provided when the JW Player theme function is called.
 */
function jw_player_default_settings() {
  $defaults = &drupal_static(__FUNCTION__);

  if (!isset($defaults)) {
    $defaults = array(
      'flashplayer' => file_create_url(libraries_get_path('jwplayer') . '/player.swf'),
      'width' => '640',
      'height' => '480',
      'autoplay' => FALSE,
      'controlbar' => 'bottom',
    );
  }
  return $defaults;
}



/**
 * Implements hook_page_build().
 *
 * If the player configuration is set to print inline, load the JW Player
 * JavaScript on all pages. Due to caching one never knows when it will be
 * needed.
 */
function jw_player_page_build(&$page) {

  if (\Drupal::config('jw_player.settings')->get('jw_player_inline_js')) {
    $path = libraries_get_path('jwplayer');
    $page['#attached']['js'][$path . '/jwplayer.js'] = array('every_page' => TRUE);

  }
  else {
    $page['#attached']['js'][libraries_get_path('jwplayer') . '/jwplayer.js'] = array('every_page' => TRUE);
    $page['#attached']['js'][] = array('data' => drupal_get_path('module', 'jw_player') . '/jw_player.js', 'type' => 'file');
    if (\Drupal::config('jw_player.settings')->get('jw_player_setting_js')) {
      $setting = \Drupal::config('jw_player.settings')->get('jw_player_setting_js');
      $page['#attached']['js'][] = $setting;
    }
  }
}

/**
 * Retrieves all available preset plugins.
 */
function jw_player_preset_plugins($name = NULL) {
  $plugins = &drupal_static(__FUNCTION__);

  if (!isset($plugins)) {
    $plugins =  \Drupal::moduleHandler()->invokeAll('jw_player_plugin_info');
    // Allow modules to alter other modules' plugin definitions
    \Drupal::moduleHandler()->alter('jw_player_plugin_info', $plugins);
  }

  if ($name && isset($plugins[$name])) {
    return $plugins[$name];
  }

  return $plugins;
}
function jw_player_preset_load(array $id = NULL) {
  return Jw_player::loadMultiple($id);
}
